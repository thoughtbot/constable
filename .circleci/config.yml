version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.9.1-node-browsers
        environment:
          MIX_ENV: test
          CLIENT_ID: fake
          CLIENT_SECRET_ID: fake
          OUTBOUND_EMAIL_DOMAIN: http://localhost
          INBOUND_EMAIL_DOMAIN: http://localhost
          SLACK_WEBHOOK_URL: https://fakeslack/webhook
      - image: circleci/postgres:10.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: constable_api_test
          POSTGRES_PASSWORD:

    working_directory: ~/app

    steps:
      - checkout

      - run: mix local.hex --force
      - run: mix local.rebar --force

      - restore_cache:
          keys:
            - v3-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v3-mix-cache-{{ .Branch }}
            - v3-mix-cache
      - restore_cache:
          keys:
            - v3-build-cache-{{ .Branch }}
            - v3-build-cache
      - run: mix do deps.get, compile --warnings-as-errors
      - save_cache:
          key: v3-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v3-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v3-mix-cache
          paths: "deps"
      - save_cache:
          key: v3-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v3-build-cache
          paths: "_build"

      - restore_cache:
          keys:
            - v4-npm-cache-{{ .Branch }}-{{ checksum "assets/package-lock.json" }}
            - v4-npm-cache-{{ .Branch }}
            - v4-npm-cache
      - run:
          working_directory: assets
          command: npm install && node_modules/.bin/webpack --mode production
      - save_cache:
          key: v4-npm-cache-{{ .Branch }}-{{ checksum "assets/package-lock.json" }}
          paths: "assets/node_modules"
      - save_cache:
          key: v4-npm-cache-{{ .Branch }}
          paths: "assets/node_modules"
      - save_cache:
          key: v4-npm-cache
          paths: "assets/node_modules"

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix test
      - run: cd assets/ && npm run eslint

      - store_test_results:
          path: _build/test/lib/constable
